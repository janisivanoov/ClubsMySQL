// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mysqltest.Models;

namespace mysqltest.Migrations
{
    [DbContext(typeof(ClubsContext))]
    partial class ClubsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("mysqltest.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 181, DateTimeKind.Local).AddTicks(9968),
                            Name = "International",
                            Type = "Other",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 185, DateTimeKind.Local).AddTicks(9131)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 185, DateTimeKind.Local).AddTicks(9672),
                            Name = "Math",
                            Type = "Academic",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 185, DateTimeKind.Local).AddTicks(9699)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 185, DateTimeKind.Local).AddTicks(9715),
                            Name = "Diving",
                            Type = "Sport",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 185, DateTimeKind.Local).AddTicks(9719)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 185, DateTimeKind.Local).AddTicks(9724),
                            Name = "Strollers",
                            Type = "Leisure",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 185, DateTimeKind.Local).AddTicks(9728)
                        });
                });

            modelBuilder.Entity("mysqltest.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1999, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5851),
                            FirstName = "Ali",
                            LastName = "Tayari",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5891)
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1963, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5964),
                            FirstName = "Dmitry",
                            LastName = "Apraksin",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5968)
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2004, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5974),
                            FirstName = "Ivan",
                            LastName = "Ivanou",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5977)
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5984),
                            FirstName = "Petr",
                            LastName = "Petrov",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5988)
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1989, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5992),
                            FirstName = "Sidor",
                            LastName = "Sidorov",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(5996)
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2000, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(6001),
                            FirstName = "Pambos",
                            LastName = "Boss",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(6004)
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(1998, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(6009),
                            FirstName = "Christos",
                            LastName = "Christou",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(6012)
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(1999, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(6017),
                            FirstName = "Savvas",
                            LastName = "Savvou",
                            UpdatedDate = new DateTime(2021, 9, 2, 16, 2, 6, 187, DateTimeKind.Local).AddTicks(6020)
                        });
                });

            modelBuilder.Entity("mysqltest.Models.StudentClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentClubs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClubId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClubId = 2,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClubId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            ClubId = 4,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 5,
                            ClubId = 3,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 6,
                            ClubId = 2,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 7,
                            ClubId = 1,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 8,
                            ClubId = 2,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 9,
                            ClubId = 3,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 10,
                            ClubId = 4,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 11,
                            ClubId = 2,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 12,
                            ClubId = 2,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 13,
                            ClubId = 1,
                            StudentId = 7
                        });
                });

            modelBuilder.Entity("mysqltest.Models.StudentClub", b =>
                {
                    b.HasOne("mysqltest.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mysqltest.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
